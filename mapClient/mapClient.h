/*
 * Generated by gdbus-codegen 2.40.2. DO NOT EDIT.
 *
 * The license of this code is the same as for the source it was derived from.
 */

#ifndef __MAPCLIENT_H__
#define __MAPCLIENT_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.bluez.obex.MessageAccess1 */

#define TYPE_OBEX_MESSAGE_ACCESS1 (obex_message_access1_get_type ())
#define OBEX_MESSAGE_ACCESS1(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_OBEX_MESSAGE_ACCESS1, ObexMessageAccess1))
#define IS_OBEX_MESSAGE_ACCESS1(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_OBEX_MESSAGE_ACCESS1))
#define OBEX_MESSAGE_ACCESS1_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), TYPE_OBEX_MESSAGE_ACCESS1, ObexMessageAccess1Iface))

struct _ObexMessageAccess1;
typedef struct _ObexMessageAccess1 ObexMessageAccess1;
typedef struct _ObexMessageAccess1Iface ObexMessageAccess1Iface;

struct _ObexMessageAccess1Iface
{
  GTypeInterface parent_iface;

  gboolean (*handle_list_filter_fields) (
    ObexMessageAccess1 *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_list_folders) (
    ObexMessageAccess1 *object,
    GDBusMethodInvocation *invocation,
    GVariant *arg_filters);

  gboolean (*handle_list_messages) (
    ObexMessageAccess1 *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_folder,
    GVariant *arg_filter);

  gboolean (*handle_push_message) (
    ObexMessageAccess1 *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_file,
    const gchar *arg_folder,
    GVariant *arg_args);

  gboolean (*handle_set_folder) (
    ObexMessageAccess1 *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_folder);

  gboolean (*handle_update_inbox) (
    ObexMessageAccess1 *object,
    GDBusMethodInvocation *invocation);

};

GType obex_message_access1_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *obex_message_access1_interface_info (void);
guint obex_message_access1_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void obex_message_access1_complete_set_folder (
    ObexMessageAccess1 *object,
    GDBusMethodInvocation *invocation);

void obex_message_access1_complete_list_folders (
    ObexMessageAccess1 *object,
    GDBusMethodInvocation *invocation,
    GVariant *content);

void obex_message_access1_complete_list_messages (
    ObexMessageAccess1 *object,
    GDBusMethodInvocation *invocation,
    GVariant *messages);

void obex_message_access1_complete_list_filter_fields (
    ObexMessageAccess1 *object,
    GDBusMethodInvocation *invocation,
    const gchar *const *fields);

void obex_message_access1_complete_update_inbox (
    ObexMessageAccess1 *object,
    GDBusMethodInvocation *invocation);

void obex_message_access1_complete_push_message (
    ObexMessageAccess1 *object,
    GDBusMethodInvocation *invocation,
    const gchar *transfer,
    GVariant *properties);



/* D-Bus method calls: */
void obex_message_access1_call_set_folder (
    ObexMessageAccess1 *proxy,
    const gchar *arg_folder,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean obex_message_access1_call_set_folder_finish (
    ObexMessageAccess1 *proxy,
    GAsyncResult *res,
    GError **error);

gboolean obex_message_access1_call_set_folder_sync (
    ObexMessageAccess1 *proxy,
    const gchar *arg_folder,
    GCancellable *cancellable,
    GError **error);

void obex_message_access1_call_list_folders (
    ObexMessageAccess1 *proxy,
    GVariant *arg_filters,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean obex_message_access1_call_list_folders_finish (
    ObexMessageAccess1 *proxy,
    GVariant **out_content,
    GAsyncResult *res,
    GError **error);

gboolean obex_message_access1_call_list_folders_sync (
    ObexMessageAccess1 *proxy,
    GVariant *arg_filters,
    GVariant **out_content,
    GCancellable *cancellable,
    GError **error);

void obex_message_access1_call_list_messages (
    ObexMessageAccess1 *proxy,
    const gchar *arg_folder,
    GVariant *arg_filter,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean obex_message_access1_call_list_messages_finish (
    ObexMessageAccess1 *proxy,
    GVariant **out_messages,
    GAsyncResult *res,
    GError **error);

gboolean obex_message_access1_call_list_messages_sync (
    ObexMessageAccess1 *proxy,
    const gchar *arg_folder,
    GVariant *arg_filter,
    GVariant **out_messages,
    GCancellable *cancellable,
    GError **error);

void obex_message_access1_call_list_filter_fields (
    ObexMessageAccess1 *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean obex_message_access1_call_list_filter_fields_finish (
    ObexMessageAccess1 *proxy,
    gchar ***out_fields,
    GAsyncResult *res,
    GError **error);

gboolean obex_message_access1_call_list_filter_fields_sync (
    ObexMessageAccess1 *proxy,
    gchar ***out_fields,
    GCancellable *cancellable,
    GError **error);

void obex_message_access1_call_update_inbox (
    ObexMessageAccess1 *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean obex_message_access1_call_update_inbox_finish (
    ObexMessageAccess1 *proxy,
    GAsyncResult *res,
    GError **error);

gboolean obex_message_access1_call_update_inbox_sync (
    ObexMessageAccess1 *proxy,
    GCancellable *cancellable,
    GError **error);

void obex_message_access1_call_push_message (
    ObexMessageAccess1 *proxy,
    const gchar *arg_file,
    const gchar *arg_folder,
    GVariant *arg_args,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean obex_message_access1_call_push_message_finish (
    ObexMessageAccess1 *proxy,
    gchar **out_transfer,
    GVariant **out_properties,
    GAsyncResult *res,
    GError **error);

gboolean obex_message_access1_call_push_message_sync (
    ObexMessageAccess1 *proxy,
    const gchar *arg_file,
    const gchar *arg_folder,
    GVariant *arg_args,
    gchar **out_transfer,
    GVariant **out_properties,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define TYPE_OBEX_MESSAGE_ACCESS1_PROXY (obex_message_access1_proxy_get_type ())
#define OBEX_MESSAGE_ACCESS1_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_OBEX_MESSAGE_ACCESS1_PROXY, ObexMessageAccess1Proxy))
#define OBEX_MESSAGE_ACCESS1_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_OBEX_MESSAGE_ACCESS1_PROXY, ObexMessageAccess1ProxyClass))
#define OBEX_MESSAGE_ACCESS1_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_OBEX_MESSAGE_ACCESS1_PROXY, ObexMessageAccess1ProxyClass))
#define IS_OBEX_MESSAGE_ACCESS1_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_OBEX_MESSAGE_ACCESS1_PROXY))
#define IS_OBEX_MESSAGE_ACCESS1_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_OBEX_MESSAGE_ACCESS1_PROXY))

typedef struct _ObexMessageAccess1Proxy ObexMessageAccess1Proxy;
typedef struct _ObexMessageAccess1ProxyClass ObexMessageAccess1ProxyClass;
typedef struct _ObexMessageAccess1ProxyPrivate ObexMessageAccess1ProxyPrivate;

struct _ObexMessageAccess1Proxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  ObexMessageAccess1ProxyPrivate *priv;
};

struct _ObexMessageAccess1ProxyClass
{
  GDBusProxyClass parent_class;
};

GType obex_message_access1_proxy_get_type (void) G_GNUC_CONST;

void obex_message_access1_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
ObexMessageAccess1 *obex_message_access1_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
ObexMessageAccess1 *obex_message_access1_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void obex_message_access1_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
ObexMessageAccess1 *obex_message_access1_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
ObexMessageAccess1 *obex_message_access1_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define TYPE_OBEX_MESSAGE_ACCESS1_SKELETON (obex_message_access1_skeleton_get_type ())
#define OBEX_MESSAGE_ACCESS1_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_OBEX_MESSAGE_ACCESS1_SKELETON, ObexMessageAccess1Skeleton))
#define OBEX_MESSAGE_ACCESS1_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_OBEX_MESSAGE_ACCESS1_SKELETON, ObexMessageAccess1SkeletonClass))
#define OBEX_MESSAGE_ACCESS1_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_OBEX_MESSAGE_ACCESS1_SKELETON, ObexMessageAccess1SkeletonClass))
#define IS_OBEX_MESSAGE_ACCESS1_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_OBEX_MESSAGE_ACCESS1_SKELETON))
#define IS_OBEX_MESSAGE_ACCESS1_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_OBEX_MESSAGE_ACCESS1_SKELETON))

typedef struct _ObexMessageAccess1Skeleton ObexMessageAccess1Skeleton;
typedef struct _ObexMessageAccess1SkeletonClass ObexMessageAccess1SkeletonClass;
typedef struct _ObexMessageAccess1SkeletonPrivate ObexMessageAccess1SkeletonPrivate;

struct _ObexMessageAccess1Skeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  ObexMessageAccess1SkeletonPrivate *priv;
};

struct _ObexMessageAccess1SkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType obex_message_access1_skeleton_get_type (void) G_GNUC_CONST;

ObexMessageAccess1 *obex_message_access1_skeleton_new (void);


G_END_DECLS

#endif /* __MAPCLIENT_H__ */
